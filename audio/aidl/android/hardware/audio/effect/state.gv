/*
 * Copyright (C) 2022 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// To render: "dot -Tpng state.gv -o state.png"

digraph effect_state_machine {

    rankdir=LR; // Left to Right layout

    label="Effect State Machine";
    fontsize=20;
    labelloc=top;

    node [fontname="Helvetica", fontsize=12, style=filled];

    // Initial state node
    I [shape=point, fillcolor=black, width=0.2];

    // Final state node
    F [shape=doublecircle, fillcolor=white, width=0.2];

    // Define other nodes with colors
    INIT [shape=ellipse, fillcolor=lightgreen];
    IDLE [shape=ellipse, fillcolor=lightblue];
    PROCESSING [shape=ellipse, fillcolor=lightyellow];
    DRAINING [shape=ellipse, fillcolor=lightgrey];

    // Transitions
    I -> INIT [label="IFactory.createEffect", fontcolor="navy"];

    INIT -> F [label="IFactory.destroyEffect"];

    INIT -> IDLE [label="IEffect.open()", fontcolor="lime"];

    IDLE -> PROCESSING [label="IEffect.command(START)"];

    PROCESSING -> IDLE [label="IEffect.command(STOP)\nIEffect.command(RESET)"];

    PROCESSING -> DRAINING [label="IEffect.command(STOP)", fontcolor="orange"];

    DRAINING -> IDLE [label="Draining complete\n(IEffect.command(RESET)\nautomatic)"];

    DRAINING -> PROCESSING [label="IEffect.command(START)\n(Interrupt draining)"];

    IDLE -> INIT [label="IEffect.close()"];

    // Self-loops
    INIT -> INIT [label="IEffect.getState\nIEffect.getDescriptor"];

    IDLE -> IDLE [label="IEffect.getParameter\nIEffect.setParameter\nIEffect.getDescriptor\nIEffect.command(RESET)\nIEffect.reopen"];

    PROCESSING -> PROCESSING [label="IEffect.getParameter\nIEffect.setParameter\nIEffect.getDescriptor\nIEffect.reopen"];

    DRAINING -> DRAINING [label="IEffect.getParameter\nIEffect.setParameter\nIEffect.getDescriptor\nIEffect.reopen\nFading"];

}
